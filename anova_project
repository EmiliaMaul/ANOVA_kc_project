{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ANOVA "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import scipy.stats as ss\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf\n",
    "from statsmodels.stats.api import anova_lm\n",
    "import pingouin as pg\n",
    "from statsmodels.stats.multicomp import (pairwise_tukeyhsd)\n",
    "sns.set()\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Какой формат фотографий блюд является наилучшим. Всего пользователям показывались три варианта:\n",
    "\n",
    "- A – прямоугольные 16:9\n",
    "- B – квадратные\n",
    "- C – прямоугольные 12:4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В данном случае для сравнения средних используется однофакторный ANOVA. Условия проведения этого статистического теста - это нормальность распределения и гомогенность дисперсий."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>group</th>\n",
       "      <th>events</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16046</td>\n",
       "      <td>A</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18712</td>\n",
       "      <td>A</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3268</td>\n",
       "      <td>A</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22633</td>\n",
       "      <td>A</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>28071</td>\n",
       "      <td>A</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id group  events\n",
       "0  16046     A      14\n",
       "1  18712     A      41\n",
       "2   3268     A      30\n",
       "3  22633     A      37\n",
       "4  28071     A      38"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_1 = pd.read_csv('task_1.csv')\n",
    "test_1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "group_A = test_1.query('group == \"A\"')\n",
    "group_B = test_1.query('group == \"B\"')\n",
    "group_C = test_1.query('group == \"C\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Проверка на гомогенность дисперсий с помощью теста Левена\n",
    "groups_pvalue = ss.levene(group_A.events, group_B.events, group_C.events)[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Гомогенность дисперсий подтверждена, так как pvalue 0.104 > 0.05\n"
     ]
    }
   ],
   "source": [
    "if groups_pvalue > 0.05:\n",
    "    print('Гомогенность дисперсий подтверждена, так как pvalue', groups_pvalue.round(3), '> 0.05')\n",
    "else:\n",
    "    print('Гомогенность дисперсий не подтверждена, так как pvalue', groups_pvalue.round(3), '< 0.05')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Проверка распределений на нормальность\n",
    "normaltest_A = ss.normaltest(group_A.events)[1]\n",
    "normaltest_B = ss.normaltest(group_B.events)[1]\n",
    "normaltest_C = ss.normaltest(group_C.events)[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "В группе A распределение нормальное\n"
     ]
    }
   ],
   "source": [
    "if normaltest_A > 0.05:\n",
    "    print('В группе A распределение нормальное')\n",
    "else:\n",
    "    print('В группе A распределение ненормальное')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "В группе B распределение нормальное\n"
     ]
    }
   ],
   "source": [
    "if normaltest_B > 0.05:\n",
    "    print('В группе B распределение нормальное')\n",
    "else:\n",
    "    print('В группе B распределение ненормальное')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "В группе C распределение нормальное\n"
     ]
    }
   ],
   "source": [
    "if normaltest_C > 0.05:\n",
    "    print('В группе C распределение нормальное')\n",
    "else:\n",
    "    print('В группе C распределение ненормальное')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sm.qqplot(group_A.events, line='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sm.qqplot(group_B.events, line='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sm.qqplot(group_C.events, line='r')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "QQ-графики позволяют дополнительно убедиться в том, что распределения нормальные"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Проведение теста"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "F_onewayResult(statistic=2886.166657438961, pvalue=0.0)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scipy.stats.f_oneway(group_A.events, group_B.events, group_C.events)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Можно сделать вывод, что статистически значимые различия между группами есть. Для определения того, между какими именно группами есть статистически значимые различия используем критерий Тьюки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>mean(A)</th>\n",
       "      <th>mean(B)</th>\n",
       "      <th>diff</th>\n",
       "      <th>se</th>\n",
       "      <th>T</th>\n",
       "      <th>p-tukey</th>\n",
       "      <th>hedges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>B</td>\n",
       "      <td>29.5796</td>\n",
       "      <td>37.6136</td>\n",
       "      <td>-8.0340</td>\n",
       "      <td>0.140894</td>\n",
       "      <td>-57.021604</td>\n",
       "      <td>0.001</td>\n",
       "      <td>-0.806377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A</td>\n",
       "      <td>C</td>\n",
       "      <td>29.5796</td>\n",
       "      <td>27.4703</td>\n",
       "      <td>2.1093</td>\n",
       "      <td>0.140894</td>\n",
       "      <td>14.970833</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.211712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>B</td>\n",
       "      <td>C</td>\n",
       "      <td>37.6136</td>\n",
       "      <td>27.4703</td>\n",
       "      <td>10.1433</td>\n",
       "      <td>0.140894</td>\n",
       "      <td>71.992436</td>\n",
       "      <td>0.001</td>\n",
       "      <td>1.018089</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   A  B  mean(A)  mean(B)     diff        se          T  p-tukey    hedges\n",
       "0  A  B  29.5796  37.6136  -8.0340  0.140894 -57.021604    0.001 -0.806377\n",
       "1  A  C  29.5796  27.4703   2.1093  0.140894  14.970833    0.001  0.211712\n",
       "2  B  C  37.6136  27.4703  10.1433  0.140894  71.992436    0.001  1.018089"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.pairwise_tukey(data=test_1, dv='events', between='group')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Multiple Comparison of Means - Tukey HSD, FWER=0.05</caption>\n",
       "<tr>\n",
       "  <th>group1</th> <th>group2</th> <th>meandiff</th> <th>p-adj</th>   <th>lower</th>   <th>upper</th>  <th>reject</th>\n",
       "</tr>\n",
       "<tr>\n",
       "     <td>A</td>      <td>B</td>     <td>8.034</td>  <td>0.001</td>  <td>7.7038</td>  <td>8.3642</td>   <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>A</td>      <td>C</td>    <td>-2.1093</td> <td>0.001</td>  <td>-2.4395</td> <td>-1.7791</td>  <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>B</td>      <td>C</td>   <td>-10.1433</td> <td>0.001</td> <td>-10.4735</td> <td>-9.8131</td>  <td>True</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.table.SimpleTable'>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pairwise_tukeyhsd(test_1.events, test_1.group).summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Делаем вывод о том, что статистически значимые различия есть между всеми группами. Однако, положительные различия наблюдаются только между группами A и B. То есть, в группе B пользователи совершали больше покупок чем в группе A.\n",
    "- Значит, квадратные фотографии блюд использовать лучше всего"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Во втором эксперименте требуется проверить, как пользователи отреагируют на изменение формата кнопки оформления заказа, с разбивкой по сегменту клиента."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В данном случае для сравнения средних используется многофакторный ANOVA."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>group</th>\n",
       "      <th>segment</th>\n",
       "      <th>events</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>83440</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>96723</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>71.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>68719</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50399</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95613</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id group segment  events\n",
       "0  83440  test    high    78.0\n",
       "1  96723  test    high    71.0\n",
       "2  68719  test    high    80.0\n",
       "3  50399  test    high    80.0\n",
       "4  95613  test    high    78.0"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_2 = pd.read_csv('task_2.csv')\n",
    "test_2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_group = test_2.query('group == \"test\"')\n",
    "control_group = test_2.query('group == \"control\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Визуализация распределений events для контрольной и тестовой групп"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f58eda7fac8>"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "test_group.events.hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f58ed9feb38>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYkAAAD7CAYAAACfQGjDAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAT/0lEQVR4nO3df4zcdZ3H8edOK+2GLgjLoKK2RKRvDalBqzlOQHPJmYuJ9RcEMFJE/9CiCX+cJoCnp3eXkAYxx2nFNhoTT4iJ5BT8ESUhuQZ7qFG0QjH3tv7oD9HIQjWUkxbo9v6Y78K07md2dmf2O7PT5yOZ7Hw/7/nO97OfmdnXfn/M9zt29OhRJEmaTWPQHZAkDS9DQpJUZEhIkooMCUlSkSEhSSpaPugO9NkK4HXAH4AjA+6LJC0Vy4AXAT8GDrcXRi0kXgd8f9CdkKQl6mJgR3vDqIXEH2buPPbYE4Psx9CanFzl2HTg+JQ5Np0t5fFpNMY47bSToe1v6IxRC4lnNzFNT/slwRLHpjPHp8yx6WwExuevNtO741qSVGRISJKKDAlJUpEhIUkqMiQkSUWGhCSpyJCQJBWN2vcklqSJU8ZZuaK+l6LZnHj2/qHDz3Dw8SdrW7akpcWQGAIrVyxnw4fvGsiyv/Xpt3FwIEuWtBS4uUmSVGRISJKK5tzcFBGTwFeAc4CngN3ABzJzKiIuALYB48Ae4MrMfKSar+81SVK9ulmTOArclJmRmeuAXwObI6IB3AZ8KDPXAvcCmwEWoyZJqt+cIZGZBzJze1vTD4E1wHrgUGbOnHt8K3BZdX8xapKkms3r6KbqP/1rgG8Cq4G9M7XMfDQiGhFx+mLUMvPAfPrafpinOnOsjuV4lDk2nY3i+Mz3ENjPAk8AW4B39L87/TM1tXQO7Bz0G2spjdViazYnHI8Cx6azpTw+jcYYk5OrZq91+yQRcTNwLnB5Zk4D+2htdpqpnwFMV//xL0ZNklSzrkIiIm6ktb/g7Zk5c5Hs+4HxiLiomt4E3LGINUlSzbo5BPY84Abgl8B9EQHw28x8R0RsBLZFxEqqw1UBMnO63zVJUv3mDInMfAgYK9TuA9bVVZMk1ctvXEuSigwJSVKRISFJKjIkJElFhoQkqciQkCQVGRKSpCJDQpJUZEhIkooMCUlSkSEhSSoyJCRJRYaEJKnIkJAkFRkSkqQiQ0KSVDTnRYfg2etbXwKcDazLzF0RcTZwZ9vDng+ckpmnV/PsAQ5VN4DrMvPuqnYBsA0Yp7r6XGY+MldNklSvrkKCVhj8B/D9mYbM3AOcPzMdEbfM8nyXZuau9oaIaAC3AVdn5o6I+BiwGXhfp9q8fitJUl90tbkpM3dk5v5SPSJOAt4NfKmLp1sPHMrMHdX0VuCyLmqSpJp1uyYxl7cCD2fmT49rvz0ixoAdwEcz88/AamDvzAMy89GIaETE6Z1qmXlgPh1qNicW+ruccByrYzkeZY5NZ6M4Pv0Kiffx12sRF2fm/ohYAdwCbAGu7NPy5jQ1dbCuRfVs0G+spTRWi63ZnHA8Chybzpby+DQaY0xOrpq91uuTR8SLgTcCt7e3z2yeyszDwK3AhVVpH7Cmbf4zgOlqTaFTTZJUs34cAvse4DuZ+dhMQ0ScHBGnVvfHgCuAnVX5fmA8Ii6qpjcBd3RRkyTVrKuQiIjPRMTvgJcA90TEQ23lq/nrTU0vALZHxAPALmAt8EGAzJwGNgKfj4jdtNZCrp+rJkmqX1f7JDLzWuDaQm3tLG2/AV7d4fnuA9bNtyZJqle/dlxriXrq6SMD2XF+6PAzHHz8ydqXK2l+DIkT3EnPW8aGD99V+3K/9em3sTSPA5FOLJ67SZJUZEhIkooMCUlSkSEhSSoyJCRJRYaEJKnIkJAkFRkSkqQiQ0KSVGRISJKKDAlJUpEhIUkqMiQkSUWGhCSpqKtThUfEzcAlwNnAuszcVbXvAQ5VN4DrMvPuqnYBsA0YB/YAV2bmI73UJEn16nZN4k7gDcDeWWqXZub51W0mIBrAbcCHqivX3Qts7qUmSapfVyGRmTsyc/88nnc9cCgzd1TTW4HLeqxJkmrWjyvT3R4RY8AO4KOZ+WdgNW1rHZn5aEQ0IuL0hdYy88B8OjWIS3Jqfob1NRrWfg0Dx6azURyfXkPi4szcHxErgFuALcCVvXerd1NTS+fimKP4xurGML5GzebEUPZrGDg2nS3l8Wk0xpicXDV7rZcnntkElZmHgVuBC6vSPmDNzOMi4gxgulobWGhNklSzBYdERJwcEadW98eAK4CdVfl+YDwiLqqmNwF39FiTJNWs20NgPwO8E3ghcE9EPAZsAP4rIpYBy4BfAB8EyMzpiNgIbIuIlVSHsvZSkyTVr6uQyMxrgWtnKb26wzz3Aev6WZMk1ctvXEuSigwJSVKRISFJKjIkJElFhoQkqciQkCQVGRKSpCJDQpJUZEhIkooMCUlSkSEhSSoyJCRJRYaEJKnIkJAkFRkSkqQiQ0KSVNTtleluBi4BzgbWZeauiJgEvgKcAzwF7AY+kJlT1TxHgQeB6eppNmbmg1VtA/Cpavn3A+/NzL/MVZMk1avbNYk7gTcAe9vajgI3ZWZk5jrg18Dm4+Z7fWaeX91mAmIV8AVgQ2a+HDgIfGSumiSpfl2FRGbuyMz9x7UdyMztbU0/BNZ08XRvBn6Smbur6a3A5V3UJEk162pz01wiogFcA3zzuNL2iFgOfBf4ZGYeBlZz7BrJPuCl1f1OtXlpNicWMptqNKyv0bD2axg4Np2N4vj0JSSAzwJPAFva2lZn5v6IOIXWvouPAx/r0/LmNDV1sK5F9WwU31jdGMbXqNmcGMp+DQPHprOlPD6NxhiTk6tmr/X65NVO7XOByzNzZic1M5unMvNx4IvAhVVpH8dulloN7O+iJkmqWU8hERE3AuuBt1ebkmbaT4uI8er+cuBSYGdV/h7wuog4t5reBHyti5okqWZdhUREfCYifge8BLgnIh6KiPOAG4CzgPsiYmdEfKOa5RXAjyLi58ADwNO0NjeRmQeB9wPfjohfAacCN89VkyTVr6t9Epl5LXDtLKWxwuN/ALyqw/PdBdw135okqV5+41qSVGRISJKKDAlJUpEhIUkqMiQkSUWGhCSpyJCQJBUZEpKkIkNCklRkSEiSigwJSVKRISFJKjIkJElFhoQkqciQkCQVGRKSpKI5LzpUXcP6EuBsYF1m7qra1wJfBiaBx4CrMnP3YtUkSfXrZk3iTuANwN7j2rcCn8vMtcDngG2LXJMk1WzONYnM3AEQEc+2RcSZwGuAN1VNXwW2REST1iVN+1rLzKmF/oKSpIXr6hrXs3gp8HBmHgHIzCMR8fuqfWwRavMOiWZzYoG/muoyrK/RsPZrGDg2nY3i+Cw0JIbe1NTBQXeha6P4xurGML5GzebEUPZrGDg2nS3l8Wk0xpicXDV7bYHPuR94cUQsA6h+nlW1L0ZNkjQACwqJzHwE2Am8q2p6F/CzzJxajNpC+ihJ6l03h8B+Bngn8ELgnoh4LDPPAzYBX46Ifwb+BFzVNtti1CRJNevm6KZrgWtnaf9f4G8K8/S9Jkmqn9+4liQVGRKSpCJDQpJUZEhIkooMCUlSkSEhSSoyJCRJRYaEJKnIkJAkFRkSkqQiQ0KSVGRISJKKDAlJUpEhIUkqMiQkSUWGhCSpaM6LDnUSEWcDd7Y1PR84JTNPj4g9wKHqBnBdZt5dzXcBsA0YB/YAV1aXL+1YkyTVq6eQyMw9wPkz0xFxy3HPeWlm7mqfJyIawG3A1Zm5IyI+BmwG3tep1ks/JUkL07fNTRFxEvBu4EtzPHQ9cCgzd1TTW4HLuqhJkmrW05rEcd4KPJyZP21ruz0ixoAdwEcz88/AamDvzAMy89GIaETE6Z1qmXlgPp1pNid6+V1Ug2F9jYa1X8PAselsFMennyHxPo5di7g4M/dHxArgFmALcGUfl9fR1NTBuhbVs1F8Y3VjGF+jZnNiKPs1DBybzpby+DQaY0xOrpq91o8FRMSLgTcCt8+0Zeb+6udh4Fbgwqq0D1jTNu8ZwHS1ptCpJkmqWb/2SbwH+E5mPgYQESdHxKnV/THgCmBn9dj7gfGIuKia3gTc0UVNklSzfoXE1Ry7qekFwPaIeADYBawFPgiQmdPARuDzEbGb1hrI9XPVJEn168s+icxce9z0b4BXd3j8fcC6+dYkSfXyG9eSpCJDQpJUZEhIkooMCUlSkSEhSSoyJCRJRYaEJKnIkJAkFRkSkqQiQ0KSVGRISJKKDAlJUpEhIUkqMiQkSUWGhCSpyJCQJBX1fNGhiNgDHKpuANdl5t0RcQGwDRgH9gBXZuYj1TwLqkmS6tWvNYlLM/P86nZ3RDSA24APVVetuxfYDLDQmiSpfou1uWk9cCgzd1TTW4HLeqxJkmrWl2tcA7dHxBiwA/gosBrYO1PMzEcjohERpy+0lpkH5tOhZnOit99Ii25YX6Nh7dcwcGw6G8Xx6UdIXJyZ+yNiBXALsAX4Rh+etydTUwcH3YWujeIbqxvD+Bo1mxND2a9h4Nh0tpTHp9EYY3Jy1ey1Xp88M/dXPw8DtwIXAvuANTOPiYgzgOlqbWChNUlSzXoKiYg4OSJOre6PAVcAO4H7gfGIuKh66Cbgjur+QmuSpJr1uibxAmB7RDwA7ALWAh/MzGlgI/D5iNgNvBG4HmChNUlS/XraJ5GZvwFeXajdB6zrZ02SVK9+Hd0kaYhNnDLOyhW9f9zne5DFocPPcPDxJ3tergbHkJBOACtXLGfDh++qfbnf+vTbWJrH+2iG526SJBUZEpKkIkNCklRkSEiSigwJSVKRISFJKjIkJElFhoQkqciQkCQVGRKSpCJDQpJUZEhIkooMCUlSkSEhSSrq6VThETEJfAU4B3gK2A18IDOnIuIo8CAwXT18Y2Y+WM23AfhUtfz7gfdm5l/mqkmS6tXrmsRR4KbMjMxcB/wa2NxWf31mnl/dZgJiFfAFYENmvhw4CHxkrpokqX49hURmHsjM7W1NPwTWzDHbm4GfZObuanorcHkXNUlSzfp2ZbqIaADXAN9sa94eEcuB7wKfzMzDwGpgb9tj9gEvre53qs3LfC+zqPoN62s0rP1aqk6k8RzF37Wfly/9LPAEsKWaXp2Z+yPiFFr7LT4OfKyPy+toamrpXDRxFN9Y3RjG16jZnBjKfvVqUO+xp54+wknPW1b7cgdxbe2l/N5pNMaYnFw1a60vIRERNwPn0tqXMA2Qmfurn49HxBeBf6wevg/4u7bZVwP7u6hJWmJOet4yr629xPV8CGxE3AisB95ebU4iIk6LiPHq/nLgUmBnNcv3gNdFxLnV9Cbga13UJEk16ykkIuI84AbgLOC+iNgZEd8AXgH8KCJ+DjwAPE1rcxOZeRB4P/DtiPgVcCpw81w1SVL9etrclJkPAWOF8qs6zHcXMOs6aKeatJRNnDLOyhX93A0oLT7fsVJNVq5YPpDt89DaRi8thKflkCQVGRKSpCJDQpJUZEhIkorccd3Go08k6Vj+RWwzqKNPPPJE0rByc5MkqciQkCQVGRKSpCJDQpJU5I5rDcRTTx8Z2DUOBnGtAWmpMiQ0EIO6zgB4rQFpPgwJSSNnUGuqzebEyK2pGhKSRo5rqv1jSOiEM9d/mSfqNcel2QxlSETEWuDLwCTwGHBVZu4ebK80KgZ53WVpqRnWQ2C3Ap/LzLXA54BtA+6PJJ2Qhm5NIiLOBF4DvKlq+iqwJSKamTk1x+zLZu40GqWrqnZ25mnjC5qvV4Na7iCX7e98Yiz7RFsuLPzvz6C09XfZ8bWxo0eP1tubOUTEeuA/M/O8trZfAFdm5k/nmP0i4PuL2T9JGmEXAzvaG4ZuTaJHP6b1S/4BODLgvkjSUrEMeBGtv6HHGMaQ2A+8OCKWZeaRiFgGnFW1z+Uwx6WgJKkrv56tceh2XGfmI8BO4F1V07uAn3WxP0KS1GdDt08CICJeQesQ2NOAP9E6BDYH2ytJOvEMZUhIkobD0G1ukiQND0NCklRkSEiSigwJSVLRMH5PYsE8MeBzImIS+ApwDvAUsBv4QGZORcQFtM6HNQ7sofVt9kcG1ddBiohPAJ8E1mXmLsemJSJWAv8O/D1wCPhBZr7fz1hLRLwF+DdgrLr9S2Z+fRTHZ9TWJDwx4HOOAjdlZmTmOlpflNkcEQ3gNuBD1TjdC2weYD8HJiJeA1wA7K2mHZvn3EQrHNZW75+PV+0n/GcsIsZo/QO2MTPPBzYCX67ePyM3PiMTEm0nBvxq1fRV4DUR0RxcrwYnMw9k5va2ph8Ca4D1wKHMnPlm+lbgspq7N3ARsYLWh/iatmbHBoiIVcBVwMcz8yhAZv7Rz9gxpoFTq/vPp3UqoDMYwfEZmZAAXgo8nJlHAKqfv6/aT2jVfzjXAN8EVlP95wyQmY8CjYg4fUDdG5R/BW7LzD1tbY5Nyzm0NpV8IiJ+EhHbI+Ii/IwBUAXnZcBdEbEXuJNWqI7k+IxSSKjss8ATwJZBd2QYRMTfAq8Fbh10X4bUMuBltE6H81rgOuDrwKqB9mpIRMRy4AbgbZm5BtgAfI0RHZ9RColnTwwIMM8TA46siLgZOBe4PDOngX20NjvN1M8ApjPzwIC6OAhvBF4J/DYi9gAvAe4GXo5jA633yDNUm00y80fAo8CT+BkDOB84KzP/B6D6+X+09uGM3PiMTEh4YsC/FhE30trO/vbMPFw13w+MV5sPADYBdwyif4OSmZsz86zMPDszzwZ+B/wD8ClO8LGBZzez/TfVhb+qI3bOBH6JnzFovV9eEhEBEBGvBF5A6wjCkRufkTp3kycGfE5EnAfsovXBfrJq/m1mviMiXk/rqIuVPHeY5x8H0tEhUK1NvKU6BNaxASLiZcCXaB3K+TTwT5n5XT9jLRHxbuB6WjuwAT6RmXeO4viMVEhIkvprZDY3SZL6z5CQJBUZEpKkIkNCklRkSEiSigwJSVKRISFJKjIkJElF/w96sjndHt7noQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "control_group.events.hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Подсчёт среднего, медианы и стандартного отклонения events в разбивке по группе и по сегменту пользователя. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>segment</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>high</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>69.938500</td>\n",
       "      <td>8.403974</td>\n",
       "      <td>40.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>102.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>40000.0</td>\n",
       "      <td>33.025925</td>\n",
       "      <td>5.720845</td>\n",
       "      <td>13.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           count       mean       std   min   25%   50%   75%    max\n",
       "segment                                                             \n",
       "high     10000.0  69.938500  8.403974  40.0  64.0  70.0  76.0  102.0\n",
       "low      40000.0  33.025925  5.720845  13.0  29.0  33.0  37.0   59.0"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_group.groupby('segment').events.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>segment</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>high</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>59.970800</td>\n",
       "      <td>7.805347</td>\n",
       "      <td>31.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>40000.0</td>\n",
       "      <td>20.031575</td>\n",
       "      <td>4.473576</td>\n",
       "      <td>4.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           count       mean       std   min   25%   50%   75%   max\n",
       "segment                                                            \n",
       "high     10000.0  59.970800  7.805347  31.0  55.0  60.0  65.0  89.0\n",
       "low      40000.0  20.031575  4.473576   4.0  17.0  20.0  23.0  41.0"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "control_group.groupby('segment').events.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Проведение теста"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sum_sq</th>\n",
       "      <th>df</th>\n",
       "      <th>F</th>\n",
       "      <th>PR(&gt;F)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>C(group)</th>\n",
       "      <td>3.837195e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112031.864119</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C(segment)</th>\n",
       "      <td>2.362480e+07</td>\n",
       "      <td>1.0</td>\n",
       "      <td>689756.377484</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C(group):C(segment)</th>\n",
       "      <td>3.664244e+04</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1069.823273</td>\n",
       "      <td>2.060261e-233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residual</th>\n",
       "      <td>3.424956e+06</td>\n",
       "      <td>99996.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           sum_sq       df              F         PR(>F)\n",
       "C(group)             3.837195e+06      1.0  112031.864119   0.000000e+00\n",
       "C(segment)           2.362480e+07      1.0  689756.377484   0.000000e+00\n",
       "C(group):C(segment)  3.664244e+04      1.0    1069.823273  2.060261e-233\n",
       "Residual             3.424956e+06  99996.0            NaN            NaN"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_interact = smf.ols(\"events ~ C(group)*C(segment)\", data=test_2).fit()\n",
    "anova_lm(model_interact, typ = 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>group</th>\n",
       "      <th>segment</th>\n",
       "      <th>events</th>\n",
       "      <th>combination</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>83440</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>78.0</td>\n",
       "      <td>test \\ high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>96723</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>71.0</td>\n",
       "      <td>test \\ high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>68719</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>80.0</td>\n",
       "      <td>test \\ high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>50399</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>80.0</td>\n",
       "      <td>test \\ high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95613</td>\n",
       "      <td>test</td>\n",
       "      <td>high</td>\n",
       "      <td>78.0</td>\n",
       "      <td>test \\ high</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id group segment  events  combination\n",
       "0  83440  test    high    78.0  test \\ high\n",
       "1  96723  test    high    71.0  test \\ high\n",
       "2  68719  test    high    80.0  test \\ high\n",
       "3  50399  test    high    80.0  test \\ high\n",
       "4  95613  test    high    78.0  test \\ high"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Создание новой колонки для проведения теста Тьюки\n",
    "test_2['combination'] = test_2.group + \" \\\\ \" + test_2.segment\n",
    "test_2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Multiple Comparison of Means - Tukey HSD, FWER=0.05</caption>\n",
       "<tr>\n",
       "      <th>group1</th>        <th>group2</th>     <th>meandiff</th> <th>p-adj</th>   <th>lower</th>    <th>upper</th>  <th>reject</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <td>control \\ high</td> <td>control \\ low</td> <td>-39.9392</td> <td>0.001</td> <td>-40.1073</td> <td>-39.7711</td>  <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>control \\ high</td>  <td>test \\ high</td>   <td>9.9677</td>  <td>0.001</td>  <td>9.7551</td>   <td>10.1803</td>  <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>control \\ high</td>  <td>test \\ low</td>   <td>-26.9449</td> <td>0.001</td>  <td>-27.113</td> <td>-26.7768</td>  <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "   <td>control \\ low</td>  <td>test \\ high</td>   <td>49.9069</td> <td>0.001</td>  <td>49.7388</td>  <td>50.075</td>   <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "   <td>control \\ low</td>  <td>test \\ low</td>    <td>12.9944</td> <td>0.001</td>  <td>12.888</td>   <td>13.1007</td>  <td>True</td> \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>test \\ high</td>   <td>test \\ low</td>   <td>-36.9126</td> <td>0.001</td> <td>-37.0807</td> <td>-36.7445</td>  <td>True</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.table.SimpleTable'>"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pairwise_tukeyhsd(test_2.events, test_2.combination).summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Делаем вывод о том, что статистически значимые различия есть между всеми группами. Интересующие нас положительные различия наблюдаются в группах:\n",
    "- сегмента high с обновленной кнопкой (увеличение на ~10)\n",
    "- сегмента low с обновленной кнопкой (увеличение на ~13)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Визуализация результатов теста"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f58c8102358>"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pointplot(x=\"group\", y=\"events\", hue=\"segment\", data=test_2, capsize=0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Оба фактора и их взаимодействие оказались значимы, для всех групп среднее значение events увеличилось, поэтому принимаем решение выкатить новую версию на всех пользователей."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
